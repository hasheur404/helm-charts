# =============================================
#  DATABASE (db)
# =============================================
dbName: db
dbComponent: "database"
dbReplicaCount: 1
dbImage:
  repository: postgres
  tag: 9.6.2
  pullPolicy: IfNotPresent
dbUser: "awx"
dbPassword: "awxpass"
dbDatabaseName: "awx"
dbService:
  type: ClusterIP
  ## Optional static port assignment for service type NodePort.
  # nodePort: 30000
  port: 5432
## Persist data to a persistent volume
persistence:
  enabled: false
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  ## DB PV access mode. If you select file storage(NAS), you must set "ReadWriteMany". If you select block storage(ISCSI), you must set "ReadWriteOnce". It is based on IBM Cloud.
  accessMode: ReadWriteOnce
  ## DB PV size. You can set at least 20GB. It is based on IBM Cloud.
  size: 20Gi
  ## DB claim name
  claimName: "awx-db"
  ## DB PV Storage-Class selection. Storage class is defined as follows: "ibmc-(block or file)-(bronze or silver or gold)".
  annotations: {volume.beta.kubernetes.io/storage-class: "ibmc-block-bronze"}
  ## DB PV mount path and sub-path (with DB file).
  mountPath: "/var/lib/postgresql/data"
  subPath: "/pgdata"
  ## DB persistence volume name
  name: "data"
dbResources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
dbNodeSelector: {}
dbTolerations: []
dbAffinity: {}


# =============================================
#  RABBITMQ (queue)
# =============================================
queueName: queue
queueComponent: "queue"
queueReplicaCount: 1
queueImage:
  repository: rabbitmq
  tag: 3
  pullPolicy: IfNotPresent
queueUser: "guest"
queuePassword: "guest"
queueVhost: awx
queueUser: guest
queuePass: awxpass
queueCookie: cookiemonster
queueService:
  type: ClusterIP
  ## Optional static port assignment for service type NodePort.
  # nodePort: 30000
  port: 5672
queueResources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
queueNodeSelector: {}
queueTolerations: []
queueAffinity: {}


# =============================================
#  MEMCACHED (cache)
# =============================================
cacheName: cache
cacheComponent: "cache"
cacheReplicaCount: 1
cacheImage:
  repository: memcached
  tag: alpine
  pullPolicy: IfNotPresent
cacheService:
  type: ClusterIP
  ## Optional static port assignment for service type NodePort.
  # nodePort: 30000
  port: 11211
cacheResources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
cacheNodeSelector: {}
cacheTolerations: []
cacheAffinity: {}


# =============================================
#  AWX_TASK (task)
# =============================================
taskName: task
taskComponent: "task"
taskReplicaCount: 1
taskImage:
  repository: sblack4/awx_task
  tag: v6-b3
  pullPolicy: IfNotPresent
secretKey: "aabbcc"
taskResources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
taskNodeSelector: {}
taskTolerations: []
taskAffinity: {}


# =============================================
#  AWX_WEB (web)
# =============================================
webName: web
webComponent: "web"
webReplicaCount: 1
webImage:
  repository: sblack4/awx_web
  tag: v6-b3
  pullPolicy: IfNotPresent
webService:
  name: "http"
  ## Set it to "NodePort". To change to "LoadBalancer" and "Ingress", you can set it after "Portable IP" is preassigned. It is based on IBM Cloud.
  type: "NodePort"
  ## Optional static port assignment for service type NodePort.
  # nodePort: 30000
  ## Set internal port
  internalPort: 80
  ## Set external port
  externalPort: 8052
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts: []
  #  - chart.example.com
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
webResources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
webNodeSelector: {}
webTolerations: []
webAffinity: {}
